<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <groupId>org.reactome.server.tools</groupId>
    <artifactId>event-pdf</artifactId>
    <version>1.1.8</version>
    <packaging>jar</packaging>

	<name>event-pdf</name>

    <parent>
        <groupId>org.reactome.maven</groupId>
        <artifactId>reactome-parent</artifactId>
        <version>1.0.3</version>
    </parent>

	<organization>
		<name>The European Bioinformatics Institute</name>
		<url>https://www.ebi.ac.uk/</url>
	</organization>

	<developers>
		<developer>
			<id>plorente</id>
			<name>Pascual Lorente</name>
			<email>plorente@ebi.ac.uk</email>
			<organization>https://www.ebi.ac.uk/</organization>
		</developer>
		<developer>
			<id>fabregat</id>
			<name>Antonio Fabregat</name>
			<email>fabregat@ebi.ac.uk</email>
			<organization>https://www.ebi.ac.uk/</organization>
		</developer>
	</developers>


	<properties>

		<main.class>org.reactome.server.tools.event.exporter.Main</main.class>

	</properties>

    <dependencies>
        <dependency>
            <groupId>org.reactome.server.graph</groupId>
            <artifactId>graph-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>analysis-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>reaction-exporter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>diagram-exporter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reactome.server.tools</groupId>
            <artifactId>fireworks-exporter</artifactId>
        </dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<!--Spring junit test framework-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- iText -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>kernel</artifactId>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>io</artifactId>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>layout</artifactId>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>hyph</artifactId>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>html2pdf</artifactId>
			<version>5.0.4</version>
		</dependency>
	</dependencies>

	<repositories>
		<!-- EBI repo -->
		<repository>
			<id>nexus-ebi-repo</id>
			<name>The EBI internal repository</name>
			<url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
			<releases>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- EBI SNAPSHOT repo -->
		<repository>
			<id>nexus-ebi-snapshot-repo</id>
			<name>The EBI internal snapshot repository</name>
			<url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
			</snapshots>
		</repository>
	</repositories>

	<!--
		NOTE:
		This project is a core dependency in the ContentService (spring-boot)
		and also an executable jar as part of the release process.
		Instruction:
			as dependency: run `mvn clean install` and use in the ContentService, etc
			as executable: run `mvn clean package -Dboot.repackage.skip=false`
	-->
	<build>
		<finalName>${project.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.ttf</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.ttf</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.ttf</exclude>
					<exclude>**/*.bin</exclude>
				</excludes>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
					<fork>true</fork>
					<mainClass>${main.class}</mainClass>
					<classifier>exec</classifier>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Help to skip the unit test when package the project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<dependencies>
					<!-- This dependency allows Checkstyle to understand Java 11 syntax -->
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.44</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>checkstyle-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<!-- Optional: Set encoding -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.reactome.maven</groupId>
    <artifactId>reactome-parent</artifactId>
    <version>1.1.0</version>
  </parent>

  <groupId>org.reactome.server.tools</groupId>
  <artifactId>event-pdf</artifactId>
  <version>1.2.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>event-pdf</name>
  <description>Generates a PDF (Portable Digital Format) document out of a Reactome event (Pathway or Reaction)</description>
  <url>https://github.com/reactome/event-pdf</url>
  <organization>
    <name>Reactome</name>
    <url>https://reactome.org</url>
  </organization>
  <licenses>
    <license>
      <name>GNU Affero General Public License, Version 3</name>
      <url>https://www.gnu.org/licenses/agpl-3.0.html</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>plorente</id>
      <name>Pascual Lorente</name>
      <roles>
        <role>alumni</role>
      </roles>
      <organization>The European Bioinformatics Institute</organization>
      <organizationUrl>https://www.ebi.ac.uk/</organizationUrl>
    </developer>
    <developer>
      <id>fabregat</id>
      <name>Antonio Fabregat</name>
      <roles>
        <role>alumni</role>
      </roles>
      <organization>The European Bioinformatics Institute</organization>
      <organizationUrl>https://www.ebi.ac.uk/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/reactome/event-pdf.git</connection>
    <developerConnection>scm:git:ssh://github.com:reactome/event-pdf.git</developerConnection>
    <url>https://github.com/reactome/event-pdf/tree/master</url>
  </scm>
  <!-- Configures the distribution to nexus repository -->
  <distributionManagement>
    <!-- Sonatype Release repo -->
    <repository>
      <id>ossrh</id>
      <name>Sonatype Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>

    <!-- Sonatype SNAPSHOT repo -->
    <snapshotRepository>
      <id>ossrh</id>
      <name>Sonatype Snapshot Repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <main.class>org.reactome.server.tools.event.exporter.Main</main.class>

    <maven.source.version>3.2.1</maven.source.version>
    <maven.release.version>3.3.1</maven.release.version>
    <maven.gpg.version>3.2.7</maven.gpg.version>
    <maven.javadoc.version>3.11.2</maven.javadoc.version>
    <maven.tidy.version>1.3.0</maven.tidy.version>
    <nexus-staging-maven-plugin>1.7.0</nexus-staging-maven-plugin>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.reactome.server.graph</groupId>
      <artifactId>graph-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.reactome.server.tools</groupId>
      <artifactId>analysis-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.reactome.server.tools</groupId>
      <artifactId>reaction-exporter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.reactome.server.tools</groupId>
      <artifactId>diagram-exporter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.reactome.server.tools</groupId>
      <artifactId>fireworks-exporter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <!--Spring junit test framework-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- iText -->
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>kernel</artifactId>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>io</artifactId>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>layout</artifactId>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>hyph</artifactId>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>html2pdf</artifactId>
      <version>5.0.3</version>
    </dependency>
  </dependencies>

  <repositories>
    <!-- EBI repo -->
    <repository>
      <id>nexus-ebi-repo</id>
      <name>The EBI internal repository</name>
      <url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
      <releases>
            </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!-- EBI SNAPSHOT repo -->
    <repository>
      <id>nexus-ebi-snapshot-repo</id>
      <name>The EBI internal snapshot repository</name>
      <url>https://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
            </snapshots>
    </repository>
  </repositories>

  <!--
        NOTE:
        This project is a core dependency in the ContentService (spring-boot)
        and also an executable jar as part of the release process.
        Instruction:
            as dependency: run `mvn clean install` and use in the ContentService, etc
            as executable: run `mvn clean package -Dboot.repackage.skip=false`
    -->
  <build>
    <finalName>${project.name}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.ttf</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.ttf</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.ttf</exclude>
          <exclude>**/*.bin</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <configuration>
          <fork>true</fork>
          <mainClass>${main.class}</mainClass>
          <classifier>exec</classifier>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Help to skip the unit test when package the project -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <dependencies>
          <!-- This dependency allows Checkstyle to understand Java 11 syntax -->
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.44</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>checkstyle-check</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <!-- Optional: Set encoding -->
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- Nexus staging plugin for Sonatype deployment -->
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven-plugin}</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>

      <!-- Generate JavaDoc jar file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.version}</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Signs deployed jar, source jar, and JavaDoc jar with GPG -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${maven.gpg.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <gpgExecutable>gpg</gpgExecutable> <!-- Explicitly specify the GPG executable -->
        </configuration>
      </plugin>

      <!-- Allows "release" mvn goal to deploy a SNAPSHOT or version release to Sonatype -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.version}</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tidy-maven-plugin</artifactId>
        <version>${maven.tidy.version}</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
